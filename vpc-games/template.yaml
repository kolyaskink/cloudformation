AWSTemplateFormatVersion: '2010-09-09'

Description: >

    VPC for studio's stuff and Fastlane apps 

Mappings:
    AWSRegionToEC2DefaultAMI:
        us-west-2:
            AMI: ami-bd7beddd
    AWSRegionToEC2FastlaneAMI:    
        us-west-2:
            AMI: ami-e0bc2980
    AWSRegionToEC2StudioJenkinsAMI:    
        us-west-2:
            AMI: ami-5cbf2f3c   

Resources:

    # VPC and Subnets 
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs ]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs ]
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

    # Inetrnet GW and etc
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Routes

    DefaultPublicRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2


    # NAT GW and etc
    EIP:
        Type: 'AWS::EC2::EIP'
        Properties:
            Domain: vpc   

    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway1EIP.AllocationId
            SubnetId: !Ref PublicSubnet1


    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway2EIP.AllocationId
            SubnetId: !Ref PublicSubnet2


    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Routes (AZ1)

    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Routes (AZ2)

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2

    #Peering

    VPCPeeringConnection:
        Type: AWS::EC2::VPCPeeringConnection
        Properties:
            VpcId: !Ref VPC
            PeerVpcId: !Ref InfraVpcId

    PeerPublicRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: !Ref InfraVpcCIDR
            VpcPeeringConnectionId: !Ref VPCPeeringConnection

    PeerPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: !Ref InfraVpcCIDR
            VpcPeeringConnectionId: !Ref VPCPeeringConnection

    PeerPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: !Ref InfraVpcCIDR
            VpcPeeringConnectionId: !Ref VPCPeeringConnection

    # Studio Jenkins template
    LBSecurityGroupJenkinsStudioTemplate:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Enable access to the Jenkins LB
            VpcId: !Ref VPC
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 443
                ToPort: 443
                CidrIp: !Ref HttpsFrom1
              - IpProtocol: tcp
                FromPort: 443
                ToPort: 443
                CidrIp: !Ref HttpsFrom2
              - IpProtocol: tcp
                FromPort: 443
                ToPort: 443
                CidrIp: !Ref HttpsFrom3
              - IpProtocol: tcp
                FromPort: 443
                ToPort: 443
                CidrIp: !Ref HttpsFrom4
            Tags:
                - Key: Name
                  Value: games-jenkins-template-lb

    EC2SecurityGroupJenkinsStudioTemplate:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: JenkinsStudioTemplate SG
            VpcId: !Ref VPC
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 80
                ToPort: 80
                SourceSecurityGroupId: !Ref LBSecurityGroupJenkinsStudioTemplate
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: !Ref InfraVpcCIDR
            Tags:
                - Key: Name
                  Value: games-jenkins-template-ec2     

    JenkinsStudioTemplateEC2Instance: 
            Type: "AWS::EC2::Instance"
            Properties: 
              ImageId: !FindInMap [AWSRegionToEC2StudioJenkinsAMI, !Ref 'AWS::Region', AMI]
              KeyName: !Ref KeyName
              IamInstanceProfile: !Ref InstanceProfileJenkinsStudioTemplate
              InstanceType: t2.small
              SecurityGroupIds: [!Ref EC2SecurityGroupJenkinsStudioTemplate]
              SubnetId: !Ref PublicSubnet1
              Tags:
                - Key: Name
                  Value: GamesJenkinsStudioTemplate
                - Key: DNS
                  Value: GamesJenkinsStudioTemplate
              UserData:
                'Fn::Base64': !Sub |
                  #!/bin/bash -x
                  /usr/local/bin/dns.sh

    JenkinsStudioTemplateBalanser:
        Type: "AWS::ElasticLoadBalancing::LoadBalancer"
        Properties:
            Instances: [!Ref JenkinsStudioTemplateEC2Instance]
            LoadBalancerName: lb-Games-JenkinsTemplate
            Listeners:
                  - LoadBalancerPort: 443
                    InstancePort: !Ref ApachePort
                    Protocol: HTTPS
                    SSLCertificateId: !Ref GhosSslCert
            HealthCheck:
                  Target: HTTP:80/static/19c0b418/images/headshot.png
                  HealthyThreshold: '3'
                  UnhealthyThreshold: '5'
                  Interval: '30'
                  Timeout: '5'
            Scheme: internet-facing
            SecurityGroups: [!Ref LBSecurityGroupJenkinsStudioTemplate]
            Subnets: [!Ref PublicSubnet1]

    InstanceProfileJenkinsStudioTemplate:
        Type: 'AWS::IAM::InstanceProfile'
        Properties:
          Path: '/'
          Roles:
          - !Ref IAMRoleJenkinsStudioTemplate

    IAMRoleJenkinsStudioTemplate:
        Type: 'AWS::IAM::Role'
        Properties:
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Principal:
                Service:
                - 'ec2.amazonaws.com'
              Action:
              - 'sts:AssumeRole'
          Path: '/'
          Policies:

          - PolicyName: 'logs'
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - 'logs:*'
                Resource:
                - 'arn:aws:logs:*:*:*'

          - PolicyName: 'dnsupdate'
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - 'route53:GetHostedZone'
                - 'route53:ListHostedZones'
                - 'route53:ListResourceRecordSets'
                - 'route53:ChangeResourceRecordSets'
                - 'route53:GetChange'
                - 'ec2:DescribeTags'
                Resource:
                - '*'

    # Fastlane 
    EC2SecurityGroupFastlane:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Fastlane SG
            VpcId: !Ref VPC
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: !Ref InfraVpcCIDR
            Tags:
                - Key: Name
                  Value: games-fastlane-ec2

    FastlaneEC2Instance: 
            Type: "AWS::EC2::Instance"
            Properties: 
              ImageId: !FindInMap [AWSRegionToEC2FastlaneAMI, !Ref 'AWS::Region', AMI]
              KeyName: !Ref KeyName
              IamInstanceProfile: !Ref InstanceProfileFastlane
              InstanceType: !Ref FastlaneHostInstanceType
              SecurityGroupIds: [!Ref EC2SecurityGroupFastlane]
              SubnetId: !Ref PrivateSubnet1
              Tags:
                - Key: Name
                  Value: GamesFastlane

    InstanceProfileFastlane:
        Type: 'AWS::IAM::InstanceProfile'
        Properties:
          Path: '/'
          Roles:
          - !Ref IAMRoleFastlane

    IAMRoleFastlane:
        Type: 'AWS::IAM::Role'
        Properties:
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Principal:
                Service:
                - 'ec2.amazonaws.com'
              Action:
              - 'sts:AssumeRole'
          Path: '/'
          Policies:

          - PolicyName: 'logs'
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - 'logs:*'
                Resource:
                - 'arn:aws:logs:*:*:*'

          # - PolicyName: 'S3BucketAssetsDownloadOnly'
          #   PolicyDocument:
          #     Version: '2012-10-17'
          #     Statement:
          #     - Effect: Allow
          #       Action:
          #           - "s3:GetObject"
          #           - "s3:GetObjectVersion"
          #           - "s3:ListObjects"
          #       Resource:
          #       - !Sub arn:aws:s3:::${S3BucketAssetsName}/*
          #     - Effect: Allow
          #       Action:
          #           - "s3:ListBucket"
          #       Resource:
          #       - !Sub arn:aws:s3:::${S3BucketAssetsName}/

    S3BucketAssets:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: !Ref S3BucketAssetsName
            LifecycleConfiguration: 
                Rules:
                - 
                    Id: !Sub ${DaysToIAAssets}toIA${DaysToGLACIERAssets}toGLACIER
                    Status: "Enabled"
                    Transitions:
                    -
                        StorageClass: "STANDARD_IA"
                        TransitionInDays: !Ref DaysToIAAssets
                    -
                        StorageClass: "GLACIER"
                        TransitionInDays: !Ref DaysToGLACIERAssets

    S3BucketAssetsPolicy:   
        Type: "AWS::S3::BucketPolicy"
        Properties:
            Bucket: !Ref S3BucketAssets
            PolicyDocument:
                Statement:
                    - 
                        Action:
                            - "s3:ListBucket"
                        Effect:  "Allow"
                        Resource: !Sub arn:aws:s3:::${S3BucketAssetsName}
                        Principal: 
                            AWS: 
                            - !Sub arn:aws:iam::777556643132:user/${IAMAppUser}
                    - 
                        Action:
                            - "s3:PutObject"
                        Effect:  "Allow"
                        Resource: !Sub arn:aws:s3:::${S3BucketAssetsName}/*
                        Principal:
                            AWS: 
                            - !Sub arn:aws:iam::777556643132:user/${IAMAppUser}

    IAMAppUser:
        Type: 'AWS::IAM::User'
        Properties:
            UserName: !Ref AppUserName
            Path: '/'
            Policies:
            - PolicyName: 'S3BucketAssetsInsert'
              PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                    - Effect: Allow
                      Action:
                        - "s3:PutObject"
                      Resource:
                        - !Sub arn:aws:s3:::${S3BucketAssetsName}/*
                    - Effect: Allow
                      Action:
                        - "s3:ListBucket"
                      Resource:
                        - !Sub arn:aws:s3:::${S3BucketAssetsName}/




Parameters:


    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: dev

    VpcCIDR:
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 10.51.3.0/24

    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.51.3.0/26

    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
        Type: String
        Default: 10.51.3.64/26

    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String
        Default: 10.51.3.128/26

    PrivateSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
        Type: String
        Default: 10.51.3.192/26

    InfraVpcId:
        Description: Please enter the Id of InfraVpc
        Type: String
        Default: vpc-a23e58c5
    
    InfraVpcCIDR:
        Description: Please enter the IP range (CIDR notation) for INFRA VPC
        Type: String
        Default: 10.51.2.0/24

    FastlaneHostInstanceType:
        Type: String
        Default: t2.small
        AllowedValues:
            - t2.small
            - t2.medium 
            - m4.large
        Description: Enter t2.small, t2.medium or m4.large. Default is t2.small.

    KeyName:
        ConstraintDescription: must be the name of an existing EC2 KeyPair.
        Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
        MinLength: '1'
        Type: AWS::EC2::KeyPair::KeyName

    S3BucketAssetsName:
        Description: Name of Bucket for Assets
        Type: String

    DaysToIAAssets:
        Description: Days before file moved to IA storage
        Type: Number
        Default: 30

    DaysToGLACIERAssets:
        Description: Days before file moved to Glacier
        Type: Number
        Default: 90

    AppUserName:
        Description: User name for parser app
        Type: String

    ApachePort:
        Description: Apache port in front of Jenkins's app
        Type: String
        MinLength: 2
        MaxLength: 5
        Default: 80

    GhosSslCert:
        Description: arn of SSL cert
        Type: String
        Default: arn:aws:acm:us-west-2:777556643132:certificate/8ea61a4f-1549-4703-b99f-da25a2be8f7d

    HttpsFrom1:
        Description: IP address to grant access to
        Type: String
        MinLength: 9
        MaxLength: 18
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
        Default: 212.67.170.162/32

    HttpsFrom2:
        Description: IP address to grant access to
        Type: String
        MinLength: 9
        MaxLength: 18
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
        Default: 127.0.0.1/32

    HttpsFrom3:
        Description: IP address to grant access to
        Type: String
        MinLength: 9
        MaxLength: 18
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
        Default: 127.0.0.2/32

    HttpsFrom4:
        Description: IP address to grant access to
        Type: String
        MinLength: 9
        MaxLength: 18
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
        Default: 127.0.0.3/32
 
Outputs:

    VpcId:
        Description: The ID for the created VPC
        Value: !Ref VPC
    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    PublicSubnet1Id: 
        Description: The ID for 1 public subnet
        Value: !Ref PublicSubnet1
    PublicSubnet2Id: 
        Description: The ID for 2 public subnet
        Value: !Ref PublicSubnet2
    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    PrivateSubnet1Id: 
        Description: The ID for 1 private subnet
        Value: !Ref PrivateSubnet1
    PrivateSubnet2Id: 
        Description: The ID for 2 private subnet
        Value: !Ref PrivateSubnet2
    PublicRouteTable:
        Description: The route table for public subnets
        Value: !Ref PublicRouteTable
    PrivateRouteTable1:
        Description: The route table for private subnet in AZ1
        Value: !Ref PrivateRouteTable1
    PrivateRouteTable2:
        Description: The route table for private subnet in AZ2
        Value: !Ref PrivateRouteTable2
    VPCPeeringConnectionId:
        Description: The ID for VPC peering to InfraVpc
        Value: !Ref VPCPeeringConnection



