AWSTemplateFormatVersion: '2010-09-09'

Description: >
    
        Bastion host

Mappings:
    AWSRegionToEC2AMI:
        us-west-2:
            AMI: ami-bd7beddd
        eu-west-2:
            AMI: ami-f1949e95

Parameters:

    SshFrom1:
        Description: IP address to grant access to
        Type: String
        MinLength: 9
        MaxLength: 18
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
        Default: 212.67.170.162/32

    SshFrom2:
        Description: IP address to grant access to
        Type: String
        MinLength: 9
        MaxLength: 18
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
        Default: 127.0.0.1/32

    SshFrom3:
        Description: IP address to grant access to
        Type: String
        MinLength: 9
        MaxLength: 18
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
        Default: 127.0.0.2/32

    SshFrom4:
        Description: IP address to grant access to
        Type: String
        MinLength: 9
        MaxLength: 18
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
        Default: 127.0.0.3/32

    KeyName:
        ConstraintDescription: must be the name of an existing EC2 KeyPair.
        Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
        MinLength: '1'
        Type: AWS::EC2::KeyPair::KeyName

    BastionHostInstanceType:
        Type: String
        Default: t2.micro
        AllowedValues:
            - t2.micro
            - t2.small
            - m1.small
        Description: Enter t2.micro, t2.small, or m1.small. Default is t2.micro.

    VPCid:
        Description: Please enter the IP range (CIDR notation) for INFRA VPC
        Type: String
        Default: 10.51.2.0/24

    PublicSubnet1Id:
        Type: String
        Default: 10.51.0.0/24

    PublicSubnet2Id:
        Type: String
        Default: 10.51.0.0/24

    EIP:
        Type: String
        Default: 127.0.0.100/32

Resources:

    BastionSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Enable access to the Bastion host
            VpcId: !Ref VPCid
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: !Ref SshFrom1
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: !Ref SshFrom2
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: !Ref SshFrom3
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: !Ref SshFrom4
            Tags:
                - Key: Name
                  Value: bastion

    BastionLaunchConfiguration:
        Type: 'AWS::AutoScaling::LaunchConfiguration'
        Metadata:
            'AWS::CloudFormation::Init':
                configSets:
                    default:
                        - ssh-access
                ssh-access:
                  services:
                    sysvinit:
                      sshd:
                        enabled: true
                        ensureRunning: true
        Properties:
              AssociatePublicIpAddress: true
              EbsOptimized: false
              IamInstanceProfile: !Ref BastionInstanceProfile
              ImageId: !FindInMap [AWSRegionToEC2AMI, !Ref 'AWS::Region', AMI]
              InstanceType: !Ref BastionHostInstanceType
              SecurityGroups:
              - !Ref BastionSecurityGroup
              KeyName: !Ref KeyName
              UserData:
                'Fn::Base64': !Sub |
                  #!/bin/bash -x
                  INSTANCEID=$(curl -s -m 60 http://169.254.169.254/latest/meta-data/instance-id)
                  aws --region ${AWS::Region} ec2 associate-address --instance-id $INSTANCEID --allocation-id ${EIP.AllocationId} && /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource BastionLaunchConfiguration --region ${AWS::Region}
                  /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource BastionAutoScalingGroup --region ${AWS::Region}

    BastionAutoScalingGroup:
        Type: 'AWS::AutoScaling::AutoScalingGroup'
        Properties:
          DesiredCapacity: 1
          LaunchConfigurationName: !Ref BastionLaunchConfiguration
          MaxSize: 1
          MinSize: 1
          VPCZoneIdentifier:
          - !Ref PublicSubnet1
          - !Ref PublicSubnet2
        CreationPolicy:
          ResourceSignal:
            Count: 1
            Timeout: PT10M
        UpdatePolicy:
          AutoScalingRollingUpdate:
            PauseTime: PT10M
            WaitOnResourceSignals: true

    BastionInstanceProfile:
        Type: 'AWS::IAM::InstanceProfile'
        Properties:
          Path: '/'
          Roles:
          - !Ref BastionIAMRole

    BastionIAMRole:
        Type: 'AWS::IAM::Role'
        Properties:
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Principal:
                Service:
                - 'ec2.amazonaws.com'
              Action:
              - 'sts:AssumeRole'
          Path: '/'
          Policies:
          - PolicyName: 'ec2'
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - 'ec2:AssociateAddress'
                - 'ec2:DescribeTags'
                Resource:
                - '*'
          - PolicyName: logs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - 'logs:CreateLogGroup'
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
                - 'logs:DescribeLogStreams'
                Resource:
                - 'arn:aws:logs:*:*:*'

Outputs:

    BastionSecurityGroup:
        Description: A reference to the Security Group where the Bastion Hosts are in
        Value: !Ref BastionSecurityGroup

