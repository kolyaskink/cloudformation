AWSTemplateFormatVersion: '2010-09-09'

Description: >
    
        VPC, Subnets, IGW, NatGW and peering

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: dev

    VpcCIDR:
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 10.51.0.0/24

    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.51.0.0/26

    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
        Type: String
        Default: 10.51.0.64/26

    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String
        Default: 10.51.0.128/26

    PrivateSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
        Type: String
        Default: 10.51.0.192/26

    PeerVpcCIDRGhMisc:
        Description: Please enter the IP range (CIDR notation) for peering VPC
        Type: String
        Default: 10.51.0.0/24

    VPCPeeringConnectionGhMisc:
        Description: Please enter the ID of the peering VPC
        Type: String
        Default: none

    PeerVpcCIDRGames:
        Description: Please enter the IP range (CIDR notation) for peering VPC
        Type: String
        Default: 10.51.3.0/24

    VPCPeeringConnectionGames:
        Description: Please enter the ID of the peering VPC
        Type: String
        Default: none

    VpnAsLux:
        Description: IpSec As for Lux
        Type: String
        Default: none

    VpnIpLux:
        Description: IP address of Lux IpSec endpoint
        Type: String
        Default: none

Resources:

    # VPC and Subnets 
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Sub vpc-${EnvironmentName}

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs ]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs ]
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

    # Inetrnet GW and etc
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Routes

    DefaultPublicRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    # Ipsec
    LuxVPNGW:    
        Type: "AWS::EC2::VPNGateway"
        Properties: 
          Type: ipsec.1
          Tags:
              - Key: Name
                Value: LuxVPNGW            
              - Key: Env
                Value: !Ref EnvironmentName
              - Key: Destination
                Value: Lux

    LuxVPNCG:    
        Type: "AWS::EC2::CustomerGateway"
        Properties:
          BgpAsn: !Ref VpnAsLux
          IpAddress: !Ref VpnIpLux
          Type: ipsec.1
          Tags: 
              - Key: Name
                Value: LuxVPNCG   
              - Key: Env
                Value: !Ref EnvironmentName
              - Key: Destination
                Value: Lux

    LuxVPN:
        Type: "AWS::EC2::VPNConnection"
        Properties: 
          Type: ipsec.1
          CustomerGatewayId: !Ref LuxVPNCG
          StaticRoutesOnly: false
          VpnGatewayId: !Ref LuxVPNGW
          Tags:
              - Key: Name
                Value: LuxVPN   
              - Key: Env
                Value: !Ref EnvironmentName
              - Key: Destination
                Value: Lux              
 
    LuxVPNAttachment:
        Type: "AWS::EC2::VPCGatewayAttachment"
        Properties: 
          VpcId: !Ref VPC
          VpnGatewayId: !Ref LuxVPNGW      

    LuxVPNRoutePropagation:
        Type: "AWS::EC2::VPNGatewayRoutePropagation"
        DependsOn: LuxVPNGW
        Properties: 
          RouteTableIds:
            - !Ref PublicRouteTable
            - !Ref PrivateRouteTable1 
            - !Ref PrivateRouteTable2
          VpnGatewayId: !Ref LuxVPNGW        


    # NAT GW and etc
    EIP:
        Type: 'AWS::EC2::EIP'
        Properties:
            Domain: vpc   

    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway1EIP.AllocationId
            SubnetId: !Ref PublicSubnet1

    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway2EIP.AllocationId
            SubnetId: !Ref PublicSubnet2

    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Routes (AZ1)

    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Routes (AZ2)

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2

    #Peering
    # GH-MISC
    PeerPublicRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: !Ref PeerVpcCIDRGhMisc
            VpcPeeringConnectionId: !Ref VPCPeeringConnectionGhMisc

    PeerPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: !Ref PeerVpcCIDRGhMisc
            VpcPeeringConnectionId: !Ref VPCPeeringConnectionGhMisc

    PeerPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: !Ref PeerVpcCIDRGhMisc
            VpcPeeringConnectionId: !Ref VPCPeeringConnectionGhMisc

    # Games
    PeerPublicRouteGames:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: !Ref PeerVpcCIDRGames
            VpcPeeringConnectionId: !Ref VPCPeeringConnectionGames

    PeerPrivateRoute1Games:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: !Ref PeerVpcCIDRGames
            VpcPeeringConnectionId: !Ref VPCPeeringConnectionGames

    PeerPrivateRoute2Games:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: !Ref PeerVpcCIDRGames
            VpcPeeringConnectionId: !Ref VPCPeeringConnectionGames

Outputs:

    VpcId:
        Description: The ID for the created VPC
        Value: !Ref VPC
    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    PublicSubnet1Id: 
        Description: The ID for 1 public subnet
        Value: !Ref PublicSubnet1
    PublicSubnet2Id: 
        Description: The ID for 2 public subnet
        Value: !Ref PublicSubnet2
    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    PrivateSubnet1Id: 
        Description: The ID for 1 private subnet
        Value: !Ref PrivateSubnet1
    PrivateSubnet2Id: 
        Description: The ID for 2 private subnet
        Value: !Ref PrivateSubnet2
    PublicRouteTable:
        Description: The route table for public subnets
        Value: !Ref PublicRouteTable
    PrivateRouteTable1:
        Description: The route table for private subnet in AZ1
        Value: !Ref PrivateRouteTable1
    PrivateRouteTable2:
        Description: The route table for private subnet in AZ2
        Value: !Ref PrivateRouteTable2
