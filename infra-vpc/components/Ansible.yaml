AWSTemplateFormatVersion: '2010-09-09'

Description: >
    
        Ansible

Mappings:
    AWSRegionToEC2AMI:
        us-west-2:
            AMI: ami-dfbca3a6


Parameters:

    InfraJenkinsIp:
        Type: String
        Default: 10.51.2.0/24

    VpcCIDR:
        Type: String
        Default: 10.51.2.0/24

    VPCid:
        Type: String
      
    PublicSubnet1Id:
        Type: String
        Default: 10.51.2.0/24

    KeyName:
        MinLength: '1'
        Type: AWS::EC2::KeyPair::KeyName

Resources:

    AnsibleSG:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Sg for test Ansible
            VpcId: !Ref VPCid
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: !Ref VpcCIDR
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: !Ref InfraJenkinsIp
            Tags:
                - Key: Name
                  Value: Ansible

    AnsibleEC2: 
            Type: "AWS::EC2::Instance"
            Properties: 
              ImageId: !FindInMap [AWSRegionToEC2AMI, !Ref 'AWS::Region', AMI]
              KeyName: !Ref KeyName
              IamInstanceProfile: !Ref AnsibleInstanceProfile
              InstanceType: t2.small
              SecurityGroupIds: [!Ref AnsibleSG]
              SubnetId: !Ref PublicSubnet1Id
              Tags:
                - Key: Name
                  Value: Ansible
                - Key: Scheduler
                  Value: WorkingDays                 

    AnsibleInstanceProfile:
        Type: 'AWS::IAM::InstanceProfile'
        Properties:
          Path: '/'
          Roles:
          - !Ref AnsibleIAMRole

    AnsibleIAMRole:
        Type: 'AWS::IAM::Role'
        Properties:
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Principal:
                Service:
                - 'ec2.amazonaws.com'
              Action:
              - 'sts:AssumeRole'
          Path: '/'
          Policies:
          - PolicyName: logs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - 'logs:CreateLogGroup'
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
                - 'logs:DescribeLogStreams'
                Resource:
                - 'arn:aws:logs:*:*:*'
          - PolicyName: ec2
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - 'ec2:*'
                Resource:
                - '*'